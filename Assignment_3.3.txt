Assignment 3.3

1. Test whether two vectors are exactly equal (element by element).
vec1 = c(rownames(mtcars[1:15,]))
vec2 = c(rownames(mtcars[11:25,]))

Answer : identical(vec1, vec2)
	Output:
[1] FALSE

2. Sort the character vector in ascending order and descending order.
vec1 = c(rownames(mtcars[1:15,]))
vec2 = c(rownames(mtcars[11:25,]))

Answer: Ascending Order:
	sort(vec1, vec2, decreasing = FALSE)
	Output:
	[1] "Cadillac Fleetwood" "Datsun 710"         "Duster 360"         "Hornet 4 Drive"    
 [5] "Hornet Sportabout"  "Mazda RX4"          "Mazda RX4 Wag"      "Merc 230"          
 [9] "Merc 240D"          "Merc 280"           "Merc 280C"          "Merc 450SE"        
[13] "Merc 450SL"         "Merc 450SLC"        "Valiant"

Descending order:
	sort(vec1, vec2, decreasing = TRUE)
	Output:
	[1] "Valiant"            "Merc 450SLC"        "Merc 450SL"         "Merc 450SE"        
 	[5] "Merc 280C"          "Merc 280"           "Merc 240D"          "Merc 230"          
 [9] "Mazda RX4 Wag"      "Mazda RX4"          "Hornet Sportabout"  "Hornet 4 Drive"    
[13] "Duster 360"         "Datsun 710"         "Cadillac Fleetwood"


3. What is the major difference between str() and paste() show an example.

Answer:
Str() - We will get information of each column and display the internal structure of an R object, a diagnostic function and an alternative to summary (Character or numerical).
## Example of str()
	str(mtcars)
	Output:
	'data.frame':	32 obs. of  11 variables:
 $ mpg : num  21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ...
 $ cyl : num  6 6 4 6 8 6 8 4 4 6 ...
 $ disp: num  160 160 108 258 360 ...
 $ hp  : num  110 110 93 110 175 105 245 62 95 123 ...
 $ drat: num  3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ...
 $ wt  : num  2.62 2.88 2.32 3.21 3.44 ...
 $ qsec: num  16.5 17 18.6 19.4 17 ...
 $ vs  : num  0 0 1 1 0 1 0 1 1 1 ...
 $ am  : num  1 1 1 0 0 0 0 0 0 0 ...
 $ gear: num  4 4 4 3 3 3 3 4 4 4 ...
 $ carb: num  4 4 1 1 2 1 4 2 2 4 ...

The function paste() is used to create and build strings. paste() takes one or more R objects, converts them to "character", and then it concatenates (pastes) them to form one or several character strings.

## Example of paste IwanttobuildmycareerinAnalytics
IwanttobuildmycareerinAnalytics = paste("I", "want", "to", "build", "my", "career", "in", "Analytics", sep = "-") 
IwanttobuildmycareerinAnalytics
Output:
[1] "I-want-to-build-my-career-in-Analytics"

4. Introduce a separator when concatenating the strings.

Answer:
	cat(1:10, sep = "-")
	Output:
 1-2-3-4-5-6-7-8-9-10
